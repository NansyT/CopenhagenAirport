//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CopenhagenAirport
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CopenhageAirportEntities : DbContext
    {
        public CopenhageAirportEntities()
            : base("name=CopenhageAirportEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Airline> Airlines { get; set; }
        public virtual DbSet<Airport> Airports { get; set; }
        public virtual DbSet<Route> Routes { get; set; }
    
        public virtual int CreateAirline(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateAirline", nameParameter);
        }
    
        public virtual int CreateAirport(string name, string city, string country)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateAirport", nameParameter, cityParameter, countryParameter);
        }
    
        public virtual int CreateRoute(Nullable<int> airlineOwner, Nullable<int> airlineOperator, string departureIATA, string destinationIATA)
        {
            var airlineOwnerParameter = airlineOwner.HasValue ?
                new ObjectParameter("AirlineOwner", airlineOwner) :
                new ObjectParameter("AirlineOwner", typeof(int));
    
            var airlineOperatorParameter = airlineOperator.HasValue ?
                new ObjectParameter("AirlineOperator", airlineOperator) :
                new ObjectParameter("AirlineOperator", typeof(int));
    
            var departureIATAParameter = departureIATA != null ?
                new ObjectParameter("DepartureIATA", departureIATA) :
                new ObjectParameter("DepartureIATA", typeof(string));
    
            var destinationIATAParameter = destinationIATA != null ?
                new ObjectParameter("DestinationIATA", destinationIATA) :
                new ObjectParameter("DestinationIATA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateRoute", airlineOwnerParameter, airlineOperatorParameter, departureIATAParameter, destinationIATAParameter);
        }
    
        public virtual int DeleteAirline(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAirline", iDParameter);
        }
    
        public virtual int DeleteAirport(string iATA)
        {
            var iATAParameter = iATA != null ?
                new ObjectParameter("IATA", iATA) :
                new ObjectParameter("IATA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAirport", iATAParameter);
        }
    
        public virtual int DeleteRoute(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRoute", iDParameter);
        }
    
        public virtual ObjectResult<GetAllAirlines_Result> GetAllAirlines()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAirlines_Result>("GetAllAirlines");
        }
    
        public virtual ObjectResult<GetAllAirports_Result> GetAllAirports()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAirports_Result>("GetAllAirports");
        }
    
        public virtual ObjectResult<GetAllRoutes_Result> GetAllRoutes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRoutes_Result>("GetAllRoutes");
        }
    }
}
